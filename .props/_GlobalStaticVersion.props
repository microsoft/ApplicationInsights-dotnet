<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="Info_GlobalStaticVersionProps"  BeforeTargets="Build" Condition=" $(Internal_Logging) == 'true' ">
    <Message Text="Info: GlobalStaticVersion.props imported by $(MSBuildProjectName)." Importance="high"/>
  </Target>

  <PropertyGroup>
    <!--
      Semantic Version. See http://semver.org for full details.
      Update for every public release.
    -->
    <SemanticVersionMajor>3</SemanticVersionMajor>
    <SemanticVersionMinor>0</SemanticVersionMinor> <!-- If changing the Minor version, also update the Date value. -->
    <SemanticVersionPatch>0</SemanticVersionPatch>
    <PreReleaseMilestone>beta1</PreReleaseMilestone> <!--Valid values: beta1, beta2, EMPTY for stable -->
    <PreReleaseMilestone Condition="'$(Redfield)' == 'True'">redfield</PreReleaseMilestone>
    <PreReleaseMilestone Condition="'$(NightlyBuild)' == 'True'">nightly</PreReleaseMilestone> <!-- Overwrite this property for nightly builds from the DEVELOP branch. -->
    <!--
      Date when Semantic Version was changed.
      Update for every MINOR release.
      NOTE!!!!!! Do not update when updating PreReleaseMilestone update
      as it will restart file versions so 2.4.0-beta1 may have higher
      file version (like 2.4.0.2222) than 2.4.0-beta2 (like 2.4.0.1111)
    -->
    <SemanticVersionDate>2024-03-15</SemanticVersionDate>

    <!--
      BuildNumber uniquely identifies all builds (The max allowed value is UInt16.MaxValue = 65535).
      The BuildNumber is used for nightly build package name and DLL assembly version.
      NuGet uses alphanumeric sorting, so this value is padded with zeros.
      BuildNumber = Hours since semantic version was set, divided by 12 (~89 years).
    -->
    <BuildNumberHours>$([MSBuild]::Divide($([System.DateTime]::Now.Subtract($([System.DateTime]::Parse($(SemanticVersionDate)))).TotalHours), 12))</BuildNumberHours>
    <BuildNumber>$([System.Math]::Floor($(BuildNumberHours)).ToString('F0').PadLeft(5, '0'))</BuildNumber>

    <VersionPrefix>$(SemanticVersionMajor).$(SemanticVersionMinor).$(SemanticVersionPatch)</VersionPrefix>
    <VersionSuffix>$(PreReleaseMilestone)</VersionSuffix>
    <AssemblyVersion>$(VersionPrefix).$(BuildNumber)</AssemblyVersion>
    <FileVersion>$(AssemblyVersion)</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(PackageVersion)'==''">
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition="'$(PreReleaseMilestone)' != ''">$(PackageVersion)-$(PreReleaseMilestone)</PackageVersion>
    <PackageVersion Condition="'$(StableRelease)' != 'True'">$(PackageVersion)-build$(BuildNumber)</PackageVersion>
  </PropertyGroup>

    <ItemGroup>
    <!--
      AssemblyVersion and AssemblyFileVersion attributes are generated automatically for every build.
      NuGet package version is derived from AssemblyFileVersion.
    -->
    <AssemblyAttributes Include="AssemblyVersion">
      <_Parameter1>$(AssemblyVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyFileVersion">
      <_Parameter1>$(FileVersion)</_Parameter1>
    </AssemblyAttributes>
  </ItemGroup>
</Project>
